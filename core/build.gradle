ext {
    versionName = VERSION_NAME
    VERSION_CODE = 1
    VSC = VSC_PATH
    isCi = true
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'realm-android'

android {

    // parcelize
    androidExtensions {
        experimental = true
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/javadoc"
    }

    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer

    defaultConfig {
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode isCi ? commitCount() : VERSION_CODE
        versionName isCi ? simpleReleaseVersionName() : VERSION_NAME
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        buildConfigField "String", "SIMPLE_VERSION_NAME", escape(simpleReleaseVersionName())
        buildConfigField "String", "CANONICAL_VERSION_NAME", escape(canonicalReleaseVersionName())
        buildConfigField "String", "COMMIT_HASH", escape(commitHash())
        buildConfigField "String", "BRANCH", escape(branchNameByGit())
        buildConfigField "String", "BUILD_DATE", escape(new Date().getTime())

        // to avoid lib compile for release when app is compiled for debug: //http://stackoverflow.com/a/30134955/2736039
        defaultPublishConfig 'release'
        publishNonDefault true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // region compile options

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // endregion

    // region compile options

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    // endregion

    // region lint options

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false        // true by default
        checkAllWarnings false
        checkReleaseBuilds false
        ignoreWarnings true       // false by default
        quiet true                // false by default
        tasks.lint.enabled = false
    }

    // endregion

    // region dex options

    dexOptions {
        javaMaxHeapSize "4g"
        maxProcessCount 8
    }

    // endregion

    // region adb options

    adbOptions {
        timeOutInMs 10 * 60 * 1000 // 10 minutes
    }

    // endregion

    // region exclude duplicated meta inf files

    packagingOptions {
        exclude 'META-INF/app_debug.kotlin_module'
        exclude 'META-INF/library-core_release.kotlin_module'
    }

    // endregion
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libs.deviceInfo
    implementation libs.timeBomb
    implementation libs.googlePlayForceUpdate
    implementation 'com.github.kibotu:StreamingAndroidLogger:4.4.4'
    api libs.resourceExtensions

    implementation libs.androidAnimationsActions
    implementation libs.shareIntentBuilder
    implementation libs.markdownview
    implementation libs.rxmarkdown
    implementation libs.zoomage
    implementation libs.polet

    compileOnly libs.apacheCommonsIo
    compileOnly libs.realmExtensions
    implementation libs.connectionBuddy
    implementation libs.processPhoenix
    implementation libs.secureStorage

    implementation libs.joda

    implementation libs.okhttp3ResponseEcho
    implementation libs.retrofitAdapterRxJava2
    implementation libs.retrofit
    implementation libs.okhttp4
    implementation libs.okhttp3LoggingInterceptor

    implementation libs.gson

    implementation libs.rx2java
    implementation libs.rx2Android

    implementation libs.parceler
    kapt libs.parcelerProcessor

    implementation libs.kotlinJdk8
    implementation libs.androidKtxCore
    implementation libs.supportAppCompat
    implementation libs.appCompatResources
    implementation libs.fragmentKtx
    implementation libs.activityKtx
    implementation libs.material
    implementation libs.swipeRefreshLayout
    implementation libs.constraintLayout2
    implementation libs.supportRecyclerview
    implementation libs.supportAnnotations
    implementation libs.supportVectorDrawable
    implementation libs.androidKtxPalette
    implementation libs.supportMedia
    implementation libs.supportCustomTabs

    implementation(libs.crashlytics) {
        transitive = true
    }
    implementation libs.playServicesAuth
    implementation libs.firebaseDatabase
    implementation libs.firebaseMessaging
    implementation libs.firebaseJobdispatcher

    implementation libs.lifecycleExtensions
    implementation libs.lifecycleViewmodel
    implementation libs.lifecycleLivedata
    implementation libs.lifecycleCommonJava8

    implementation libs.koinAndroidxScope
    implementation libs.koinAndroidxViewmodel
}

// region override support library version

configurations.all {

    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'

    resolutionStrategy.force libs.kotlinJdk8
    resolutionStrategy.force libs.androidKtxCore
    resolutionStrategy.force libs.supportAppCompat
    resolutionStrategy.force libs.appCompatResources
    resolutionStrategy.force libs.fragmentKtx
    resolutionStrategy.force libs.activityKtx
    resolutionStrategy.force libs.material
    resolutionStrategy.force libs.swipeRefreshLayout
    resolutionStrategy.force libs.constraintLayout2
    resolutionStrategy.force libs.supportRecyclerview
    resolutionStrategy.force libs.supportAnnotations
    resolutionStrategy.force libs.supportVectorDrawable
    resolutionStrategy.force libs.androidKtxPalette
    resolutionStrategy.force libs.supportMedia
    resolutionStrategy.force libs.lifecycleExtensions
    resolutionStrategy.force libs.lifecycleCommonJava8
    resolutionStrategy.force libs.lifecycleLivedataKtx
}

// endregion

static def escape(Object value) {
    return "\"$value\""
}

apply from: "${project.rootDir}/Android-Dependencies/bintray.gradle"